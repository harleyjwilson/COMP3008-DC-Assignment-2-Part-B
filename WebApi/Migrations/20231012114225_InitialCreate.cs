using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

#pragma warning disable CA1814 // Prefer jagged arrays over multidimensional

namespace WebApi.Migrations
{
    /// <inheritdoc />
    public partial class InitialCreate : Migration
    {
        /// <inheritdoc />
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "Admins",
                columns: table => new
                {
                    Username = table.Column<string>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    Email = table.Column<string>(type: "TEXT", nullable: true),
                    Address = table.Column<string>(type: "TEXT", nullable: true),
                    Phone = table.Column<string>(type: "TEXT", nullable: true),
                    Picture = table.Column<string>(type: "TEXT", nullable: true),
                    Password = table.Column<string>(type: "TEXT", nullable: true),
                    SessionID = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Admins", x => x.Username);
                });

            migrationBuilder.CreateTable(
                name: "Users",
                columns: table => new
                {
                    Username = table.Column<string>(type: "TEXT", nullable: false),
                    Name = table.Column<string>(type: "TEXT", nullable: true),
                    Email = table.Column<string>(type: "TEXT", nullable: true),
                    Address = table.Column<string>(type: "TEXT", nullable: true),
                    Phone = table.Column<string>(type: "TEXT", nullable: true),
                    Picture = table.Column<byte[]>(type: "BLOB", nullable: true),
                    Password = table.Column<string>(type: "TEXT", nullable: true),
                    SessionID = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Users", x => x.Username);
                });

            migrationBuilder.CreateTable(
                name: "BankAccounts",
                columns: table => new
                {
                    AccountNumber = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    AccountHolderName = table.Column<string>(type: "TEXT", nullable: true),
                    Balance = table.Column<double>(type: "REAL", nullable: false),
                    UserUsername = table.Column<string>(type: "TEXT", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_BankAccounts", x => x.AccountNumber);
                    table.ForeignKey(
                        name: "FK_BankAccounts_Users_UserUsername",
                        column: x => x.UserUsername,
                        principalTable: "Users",
                        principalColumn: "Username",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Transactions",
                columns: table => new
                {
                    TransactionId = table.Column<int>(type: "INTEGER", nullable: false)
                        .Annotation("Sqlite:Autoincrement", true),
                    FromAccountNumber = table.Column<int>(type: "INTEGER", nullable: false),
                    ToAccountNumber = table.Column<int>(type: "INTEGER", nullable: false),
                    Amount = table.Column<double>(type: "REAL", nullable: false),
                    Timestamp = table.Column<DateTime>(type: "TEXT", nullable: false),
                    BankAccountAccountNumber = table.Column<int>(type: "INTEGER", nullable: true),
                    Description = table.Column<string>(type: "TEXT", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Transactions", x => x.TransactionId);
                    table.ForeignKey(
                        name: "FK_Transactions_BankAccounts_BankAccountAccountNumber",
                        column: x => x.BankAccountAccountNumber,
                        principalTable: "BankAccounts",
                        principalColumn: "AccountNumber",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "Admins",
                columns: new[] { "Username", "Address", "Email", "Name", "Password", "Phone", "Picture", "SessionID" },
                values: new object[] { "admin", "Sydney", "email0@gmail.com", "Admin User", "adminpassword", "000-000-0000", "/resources/images/man1.jpeg", null });

            migrationBuilder.InsertData(
                table: "Transactions",
                columns: new[] { "TransactionId", "Amount", "BankAccountAccountNumber", "Description", "FromAccountNumber", "Timestamp", "ToAccountNumber" },
                values: new object[,]
                {
                    { 1, 4642.0, null, "Transfer of $4,642.00 from 13 to 1", 13, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(779), 1 },
                    { 2, 2969.0, null, "Transfer of $2,969.00 from 8 to 14", 8, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(821), 14 },
                    { 3, 26.0, null, "Transfer of $26.00 from 11 to 1", 11, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(829), 1 },
                    { 4, 1841.0, null, "Transfer of $1,841.00 from 4 to 5", 4, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(833), 5 },
                    { 5, 619.0, null, "Transfer of $619.00 from 13 to 8", 13, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(837), 8 },
                    { 6, 33.0, null, "Transfer of $33.00 from 11 to 4", 11, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(843), 4 },
                    { 7, 35120.0, null, "Transfer of $35,120.00 from 9 to 5", 9, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(846), 5 },
                    { 8, 1145.0, null, "Transfer of $1,145.00 from 13 to 12", 13, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(850), 12 },
                    { 9, 124.0, null, "Transfer of $124.00 from 3 to 13", 3, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(854), 13 },
                    { 10, 6652.0, null, "Transfer of $6,652.00 from 9 to 11", 9, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(859), 11 },
                    { 11, 1489.0, null, "Transfer of $1,489.00 from 9 to 12", 9, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(863), 12 },
                    { 12, 35102.0, null, "Transfer of $35,102.00 from 10 to 11", 10, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(866), 11 },
                    { 13, 11773.0, null, "Transfer of $11,773.00 from 5 to 13", 5, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(870), 13 },
                    { 14, 18451.0, null, "Transfer of $18,451.00 from 1 to 7", 1, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(874), 7 },
                    { 15, 21609.0, null, "Transfer of $21,609.00 from 5 to 12", 5, new DateTime(2023, 10, 12, 11, 42, 25, 594, DateTimeKind.Utc).AddTicks(878), 12 }
                });

            migrationBuilder.InsertData(
                table: "Users",
                columns: new[] { "Username", "Address", "Email", "Name", "Password", "Phone", "Picture", "SessionID" },
                values: new object[,]
                {
                    { "afndp", "4134 Oak Ln", "afndp@examplemail.com", "utokyk uizhyrzh", "6242", "218-401-1010", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 76, 172, 188, 255, 74, 32, 84, 255, 90, 24, 65, 255, 151, 81, 122, 255, 253, 26, 57, 255, 124, 239, 87, 255, 71, 199, 88, 255, 112, 184, 182, 255, 0, 68, 7, 11, 255, 112, 68, 139, 255, 153, 155, 210, 255, 17, 218, 200, 255, 150, 235, 178, 255, 177, 171, 73, 255, 237, 235, 102, 255, 78, 117, 101, 255, 0, 73, 156, 38, 255, 118, 103, 195, 255, 244, 247, 14, 255, 4, 99, 157, 255, 133, 217, 52, 255, 152, 109, 241, 255, 14, 109, 210, 255, 122, 175, 239, 255, 0, 81, 162, 140, 255, 242, 251, 144, 255, 145, 125, 168, 255, 55, 232, 229, 255, 153, 174, 158, 255, 86, 76, 44, 255, 210, 29, 77, 255, 113, 114, 180, 255, 0, 59, 25, 172, 255, 17, 55, 37, 255, 3, 18, 239, 255, 8, 94, 23, 255, 184, 159, 101, 255, 58, 201, 197, 255, 141, 104, 26, 255, 161, 47, 140, 255, 0, 129, 248, 238, 255, 240, 36, 136, 255, 19, 209, 136, 255, 188, 209, 10, 255, 228, 124, 238, 255, 70, 170, 254, 255, 2, 52, 15, 255, 147, 133, 237, 255, 0, 233, 191, 126, 255, 8, 200, 101, 255, 79, 57, 4, 255, 157, 50, 212, 255, 241, 139, 137, 255, 102, 218, 94, 255, 25, 89, 98, 255, 36, 3, 131, 255, 0, 13, 247, 202, 255, 110, 35, 16, 255, 33, 220, 50, 255, 63, 16, 216, 255, 54, 9, 117, 255, 194, 38, 166, 255, 85, 106, 76, 255, 197, 27, 188, 255, 68, 95, 155, 189, 57, 68, 10, 223, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "bpzdr", "362 Oak Ave", "bpzdr@examplemail.com", "lluyaz zbfqxhjy", "7624", "877-449-9836", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 196, 87, 78, 255, 6, 224, 151, 255, 233, 64, 136, 255, 25, 171, 80, 255, 64, 184, 19, 255, 250, 107, 102, 255, 221, 114, 125, 255, 49, 194, 191, 255, 0, 157, 251, 230, 255, 77, 209, 166, 255, 101, 160, 154, 255, 198, 254, 185, 255, 236, 220, 205, 255, 50, 231, 31, 255, 59, 194, 240, 255, 163, 235, 26, 255, 0, 235, 75, 77, 255, 69, 237, 145, 255, 64, 195, 226, 255, 212, 212, 60, 255, 45, 77, 1, 255, 79, 195, 19, 255, 133, 172, 25, 255, 34, 85, 92, 255, 0, 240, 28, 154, 255, 228, 229, 50, 255, 193, 30, 165, 255, 254, 119, 119, 255, 208, 54, 158, 255, 26, 45, 24, 255, 60, 250, 142, 255, 109, 165, 163, 255, 0, 246, 59, 205, 255, 165, 183, 180, 255, 116, 1, 42, 255, 115, 134, 250, 255, 87, 120, 36, 255, 161, 149, 251, 255, 100, 66, 131, 255, 115, 142, 202, 255, 0, 116, 69, 245, 255, 201, 141, 198, 255, 23, 205, 149, 255, 79, 128, 197, 255, 70, 68, 76, 255, 150, 34, 101, 255, 24, 201, 113, 255, 247, 201, 138, 255, 0, 159, 199, 71, 255, 161, 111, 138, 255, 135, 53, 164, 255, 167, 59, 23, 255, 89, 175, 232, 255, 105, 225, 57, 255, 74, 150, 22, 255, 233, 159, 245, 255, 0, 60, 10, 154, 255, 244, 240, 200, 255, 2, 8, 244, 255, 87, 119, 33, 255, 116, 148, 106, 255, 243, 202, 40, 255, 34, 4, 233, 255, 149, 247, 151, 255, 123, 73, 164, 127, 22, 48, 240, 109, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "btdbf", "1097 Elm Ln", "btdbf@examplemail.com", "rbzpgf mixaqvmh", "7663", "304-185-3095", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 169, 142, 59, 255, 119, 179, 25, 255, 104, 240, 102, 255, 0, 117, 82, 255, 41, 151, 242, 255, 6, 181, 58, 255, 98, 165, 101, 255, 252, 198, 3, 255, 0, 84, 173, 139, 255, 65, 47, 110, 255, 11, 98, 66, 255, 112, 142, 10, 255, 124, 176, 22, 255, 226, 51, 248, 255, 33, 224, 37, 255, 13, 1, 203, 255, 0, 202, 23, 246, 255, 96, 7, 89, 255, 215, 1, 3, 255, 92, 186, 27, 255, 32, 126, 176, 255, 105, 202, 86, 255, 50, 87, 35, 255, 209, 89, 129, 255, 0, 238, 22, 198, 255, 106, 247, 92, 255, 85, 155, 63, 255, 48, 244, 31, 255, 72, 248, 54, 255, 10, 215, 36, 255, 113, 39, 122, 255, 184, 227, 201, 255, 0, 57, 32, 149, 255, 186, 142, 176, 255, 239, 180, 21, 255, 87, 247, 83, 255, 119, 63, 229, 255, 215, 254, 167, 255, 176, 133, 61, 255, 82, 27, 186, 255, 0, 194, 119, 112, 255, 35, 204, 145, 255, 162, 217, 77, 255, 241, 65, 223, 255, 121, 240, 228, 255, 246, 148, 147, 255, 11, 178, 34, 255, 144, 234, 172, 255, 0, 208, 65, 96, 255, 241, 222, 96, 255, 252, 106, 137, 255, 74, 28, 242, 255, 183, 174, 125, 255, 97, 9, 75, 255, 198, 191, 82, 255, 38, 200, 108, 255, 0, 134, 98, 247, 255, 238, 39, 124, 255, 220, 153, 88, 255, 110, 5, 51, 255, 178, 34, 25, 255, 73, 80, 50, 255, 75, 220, 205, 255, 29, 0, 98, 255, 218, 223, 156, 26, 172, 219, 21, 110, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "ifybc", "2452 Pine Ln", "ifybc@examplemail.com", "qlrtut ecgsqcuf", "1351", "718-217-1314", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 99, 173, 104, 255, 101, 107, 105, 255, 68, 200, 209, 255, 95, 25, 42, 255, 113, 248, 203, 255, 100, 116, 225, 255, 119, 45, 192, 255, 50, 170, 167, 255, 0, 20, 8, 169, 255, 158, 216, 2, 255, 49, 130, 177, 255, 237, 149, 123, 255, 90, 220, 135, 255, 51, 45, 180, 255, 38, 231, 211, 255, 145, 20, 200, 255, 0, 84, 20, 212, 255, 245, 107, 145, 255, 215, 16, 137, 255, 192, 220, 19, 255, 177, 126, 215, 255, 8, 10, 164, 255, 213, 252, 171, 255, 69, 212, 75, 255, 0, 251, 176, 119, 255, 179, 104, 138, 255, 74, 116, 214, 255, 138, 148, 184, 255, 154, 187, 197, 255, 77, 18, 39, 255, 27, 160, 244, 255, 15, 199, 14, 255, 0, 174, 68, 74, 255, 226, 109, 173, 255, 34, 194, 185, 255, 80, 189, 9, 255, 64, 252, 84, 255, 133, 94, 202, 255, 22, 136, 230, 255, 159, 118, 203, 255, 0, 196, 57, 180, 255, 61, 143, 140, 255, 104, 226, 186, 255, 147, 11, 24, 255, 231, 154, 196, 255, 98, 176, 110, 255, 61, 253, 166, 255, 166, 78, 81, 255, 0, 240, 36, 245, 255, 218, 64, 100, 255, 21, 93, 196, 255, 82, 37, 170, 255, 40, 246, 44, 255, 72, 178, 212, 255, 73, 248, 177, 255, 181, 74, 171, 255, 0, 89, 99, 59, 255, 200, 249, 99, 255, 253, 250, 108, 255, 70, 81, 109, 255, 136, 48, 234, 255, 137, 2, 232, 255, 176, 254, 6, 255, 3, 53, 179, 255, 116, 171, 162, 206, 254, 137, 0, 211, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "kmkno", "2087 Maple Ave", "kmkno@examplemail.com", "gkfatc pkvxixse", "8670", "574-584-5469", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 18, 249, 94, 255, 243, 47, 66, 255, 170, 253, 203, 255, 30, 246, 192, 255, 238, 109, 227, 255, 200, 238, 224, 255, 154, 225, 91, 255, 202, 20, 71, 255, 0, 189, 42, 158, 255, 233, 156, 4, 255, 171, 216, 178, 255, 108, 198, 118, 255, 252, 57, 157, 255, 45, 220, 20, 255, 198, 190, 117, 255, 140, 23, 90, 255, 0, 75, 202, 228, 255, 116, 215, 152, 255, 228, 5, 140, 255, 254, 56, 18, 255, 198, 138, 17, 255, 208, 103, 178, 255, 195, 231, 233, 255, 218, 181, 120, 255, 0, 23, 124, 220, 255, 30, 232, 238, 255, 238, 33, 69, 255, 184, 56, 218, 255, 22, 123, 245, 255, 190, 207, 6, 255, 180, 115, 27, 255, 70, 42, 28, 255, 0, 117, 210, 142, 255, 100, 236, 246, 255, 158, 104, 180, 255, 206, 165, 230, 255, 145, 79, 125, 255, 95, 235, 64, 255, 217, 253, 10, 255, 110, 133, 159, 255, 0, 56, 220, 169, 255, 213, 227, 178, 255, 183, 69, 118, 255, 102, 132, 39, 255, 163, 6, 217, 255, 254, 119, 133, 255, 184, 27, 153, 255, 173, 172, 42, 255, 0, 23, 222, 89, 255, 176, 108, 156, 255, 135, 70, 79, 255, 4, 41, 169, 255, 253, 185, 129, 255, 79, 84, 68, 255, 55, 142, 128, 255, 15, 29, 197, 255, 0, 207, 172, 39, 255, 24, 3, 136, 255, 135, 171, 109, 255, 103, 227, 211, 255, 137, 117, 214, 255, 45, 207, 61, 255, 238, 27, 187, 255, 197, 117, 61, 255, 114, 135, 167, 137, 43, 179, 91, 36, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "mjldr", "6666 Oak Blvd", "mjldr@examplemail.com", "bqskun oirfqsck", "2806", "796-557-7314", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 164, 210, 98, 255, 210, 34, 18, 255, 99, 241, 241, 255, 208, 210, 8, 255, 144, 53, 248, 255, 65, 239, 52, 255, 116, 0, 61, 255, 1, 37, 210, 255, 0, 230, 128, 82, 255, 85, 233, 212, 255, 244, 116, 117, 255, 211, 124, 136, 255, 107, 240, 7, 255, 126, 167, 64, 255, 213, 27, 85, 255, 224, 18, 185, 255, 0, 170, 155, 238, 255, 244, 19, 89, 255, 36, 53, 95, 255, 9, 59, 138, 255, 15, 31, 96, 255, 35, 7, 95, 255, 240, 44, 96, 255, 222, 8, 207, 255, 0, 123, 44, 195, 255, 193, 131, 146, 255, 123, 150, 31, 255, 182, 221, 75, 255, 220, 252, 235, 255, 135, 248, 114, 255, 78, 187, 12, 255, 39, 207, 228, 255, 0, 232, 30, 226, 255, 246, 149, 251, 255, 171, 199, 105, 255, 183, 91, 153, 255, 244, 66, 64, 255, 183, 89, 111, 255, 35, 1, 226, 255, 171, 193, 115, 255, 0, 194, 247, 74, 255, 146, 108, 11, 255, 115, 172, 67, 255, 176, 109, 143, 255, 250, 16, 249, 255, 101, 78, 60, 255, 185, 247, 70, 255, 248, 38, 185, 255, 0, 93, 2, 70, 255, 197, 18, 168, 255, 132, 160, 134, 255, 99, 5, 175, 255, 250, 109, 157, 255, 189, 144, 23, 255, 73, 126, 178, 255, 49, 231, 190, 255, 0, 205, 17, 186, 255, 52, 192, 105, 255, 128, 137, 38, 255, 116, 205, 125, 255, 235, 35, 76, 255, 42, 188, 238, 255, 113, 94, 33, 255, 95, 106, 136, 255, 58, 150, 161, 115, 46, 230, 199, 233, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "nmhkn", "7504 Pine Rd", "nmhkn@examplemail.com", "xuvpfj jzeuwscw", "3210", "788-286-4121", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 13, 43, 21, 255, 3, 160, 215, 255, 98, 59, 81, 255, 106, 238, 135, 255, 2, 155, 241, 255, 173, 137, 113, 255, 101, 233, 63, 255, 215, 74, 79, 255, 0, 244, 20, 98, 255, 219, 134, 143, 255, 104, 84, 26, 255, 125, 128, 125, 255, 189, 227, 145, 255, 244, 43, 189, 255, 136, 66, 69, 255, 74, 133, 251, 255, 0, 174, 139, 176, 255, 100, 67, 212, 255, 207, 150, 71, 255, 84, 31, 13, 255, 203, 130, 120, 255, 102, 76, 37, 255, 49, 114, 61, 255, 95, 104, 33, 255, 0, 46, 217, 27, 255, 134, 12, 49, 255, 207, 152, 26, 255, 191, 103, 14, 255, 54, 23, 88, 255, 152, 190, 85, 255, 121, 196, 44, 255, 215, 162, 93, 255, 0, 152, 76, 248, 255, 234, 214, 20, 255, 207, 250, 244, 255, 141, 248, 188, 255, 86, 151, 155, 255, 30, 223, 117, 255, 251, 118, 111, 255, 174, 249, 253, 255, 0, 219, 38, 84, 255, 6, 107, 28, 255, 230, 149, 68, 255, 89, 103, 34, 255, 16, 133, 243, 255, 44, 36, 57, 255, 87, 24, 98, 255, 22, 16, 246, 255, 0, 20, 181, 22, 255, 218, 189, 182, 255, 227, 150, 208, 255, 8, 157, 244, 255, 230, 168, 33, 255, 123, 25, 245, 255, 217, 130, 112, 255, 130, 90, 54, 255, 0, 74, 22, 122, 255, 114, 60, 140, 255, 63, 53, 157, 255, 155, 202, 109, 255, 171, 28, 173, 255, 1, 54, 7, 255, 76, 117, 8, 255, 108, 170, 68, 255, 186, 159, 153, 208, 183, 156, 189, 151, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "orijb", "8691 Oak Ln", "orijb@examplemail.com", "mdltsm plmxazyw", "7729", "715-841-7379", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 30, 46, 91, 255, 206, 24, 162, 255, 170, 161, 57, 255, 208, 30, 233, 255, 200, 227, 239, 255, 106, 47, 66, 255, 5, 37, 94, 255, 129, 113, 99, 255, 0, 113, 140, 59, 255, 8, 90, 78, 255, 38, 189, 238, 255, 223, 87, 230, 255, 214, 100, 191, 255, 204, 100, 64, 255, 243, 224, 233, 255, 183, 14, 59, 255, 0, 106, 218, 2, 255, 57, 124, 165, 255, 62, 13, 74, 255, 124, 52, 236, 255, 126, 158, 234, 255, 68, 28, 93, 255, 132, 102, 43, 255, 244, 94, 250, 255, 0, 237, 217, 219, 255, 12, 8, 205, 255, 206, 150, 144, 255, 64, 237, 131, 255, 4, 69, 4, 255, 191, 237, 5, 255, 225, 70, 193, 255, 117, 237, 207, 255, 0, 29, 146, 110, 255, 193, 143, 226, 255, 210, 174, 216, 255, 49, 134, 4, 255, 199, 111, 157, 255, 129, 142, 9, 255, 131, 245, 60, 255, 20, 186, 214, 255, 0, 84, 196, 91, 255, 123, 139, 39, 255, 193, 128, 169, 255, 46, 21, 7, 255, 139, 74, 81, 255, 157, 76, 28, 255, 197, 108, 48, 255, 202, 243, 50, 255, 0, 8, 3, 75, 255, 24, 108, 41, 255, 29, 29, 160, 255, 181, 87, 153, 255, 9, 180, 7, 255, 236, 244, 110, 255, 234, 195, 87, 255, 235, 48, 151, 255, 0, 132, 179, 107, 255, 149, 111, 26, 255, 80, 26, 231, 255, 109, 49, 75, 255, 247, 5, 24, 255, 111, 222, 23, 255, 77, 32, 42, 255, 88, 167, 111, 255, 236, 230, 154, 126, 200, 34, 105, 11, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "sjjbo", "8484 Elm Rd", "sjjbo@examplemail.com", "awmpwl nuqzxwux", "6305", "297-783-1272", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 107, 113, 188, 255, 82, 203, 247, 255, 148, 61, 83, 255, 206, 57, 147, 255, 122, 7, 149, 255, 184, 232, 69, 255, 224, 126, 15, 255, 163, 113, 136, 255, 0, 105, 74, 87, 255, 19, 229, 243, 255, 46, 78, 76, 255, 68, 171, 158, 255, 167, 5, 82, 255, 163, 39, 170, 255, 195, 44, 102, 255, 160, 114, 86, 255, 0, 82, 29, 161, 255, 127, 128, 90, 255, 14, 60, 204, 255, 51, 169, 40, 255, 150, 73, 20, 255, 165, 252, 183, 255, 213, 104, 94, 255, 212, 235, 7, 255, 0, 198, 155, 130, 255, 134, 178, 205, 255, 198, 23, 205, 255, 44, 36, 39, 255, 134, 141, 8, 255, 246, 144, 209, 255, 173, 107, 96, 255, 120, 178, 103, 255, 0, 84, 141, 8, 255, 114, 41, 132, 255, 203, 49, 58, 255, 55, 104, 246, 255, 243, 245, 105, 255, 223, 190, 120, 255, 210, 98, 109, 255, 142, 88, 66, 255, 0, 61, 163, 71, 255, 150, 55, 94, 255, 251, 23, 230, 255, 70, 234, 254, 255, 111, 61, 227, 255, 4, 137, 122, 255, 64, 41, 170, 255, 8, 70, 64, 255, 0, 147, 216, 248, 255, 194, 250, 50, 255, 32, 125, 157, 255, 166, 238, 53, 255, 43, 146, 45, 255, 158, 238, 93, 255, 64, 241, 61, 255, 66, 59, 33, 255, 0, 64, 178, 184, 255, 10, 146, 17, 255, 33, 109, 55, 255, 97, 208, 246, 255, 159, 247, 195, 255, 189, 238, 102, 255, 46, 115, 27, 255, 247, 63, 254, 255, 182, 135, 157, 220, 6, 145, 93, 131, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "userdonald", "Florida", "donald@realdonald.com", "Donald Trump", "userpassword", "666-666-6666", null, "null" },
                    { "userjoe", "Washington DC", "biden@potus.com", "Joe Biden", "userpassword", "777-777-7777", null, "null" },
                    { "vmbpp", "6765 Oak Rd", "vmbpp@examplemail.com", "nedrrp zogqljog", "6430", "227-603-1347", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 82, 89, 10, 255, 252, 213, 223, 255, 94, 238, 64, 255, 214, 107, 247, 255, 57, 149, 118, 255, 81, 193, 251, 255, 187, 121, 124, 255, 169, 67, 21, 255, 0, 188, 23, 171, 255, 71, 48, 38, 255, 107, 2, 33, 255, 246, 93, 11, 255, 241, 230, 188, 255, 95, 253, 21, 255, 94, 47, 243, 255, 154, 196, 216, 255, 0, 140, 24, 104, 255, 145, 96, 83, 255, 137, 166, 66, 255, 241, 251, 232, 255, 149, 10, 130, 255, 190, 249, 190, 255, 196, 25, 71, 255, 180, 212, 235, 255, 0, 119, 199, 4, 255, 78, 141, 189, 255, 143, 157, 247, 255, 210, 44, 151, 255, 153, 120, 142, 255, 185, 116, 207, 255, 208, 184, 21, 255, 109, 167, 125, 255, 0, 63, 185, 37, 255, 203, 170, 116, 255, 246, 22, 32, 255, 40, 44, 65, 255, 181, 165, 178, 255, 14, 165, 184, 255, 208, 82, 8, 255, 3, 178, 210, 255, 0, 18, 118, 58, 255, 33, 96, 127, 255, 29, 53, 184, 255, 80, 8, 21, 255, 124, 90, 78, 255, 223, 206, 26, 255, 57, 176, 73, 255, 88, 152, 124, 255, 0, 139, 190, 140, 255, 115, 199, 67, 255, 211, 216, 5, 255, 95, 238, 147, 255, 191, 198, 132, 255, 68, 231, 69, 255, 91, 252, 107, 255, 251, 217, 134, 255, 0, 11, 2, 196, 255, 124, 106, 77, 255, 76, 11, 179, 255, 200, 92, 135, 255, 169, 155, 79, 255, 193, 35, 129, 255, 251, 142, 42, 255, 162, 143, 44, 255, 181, 13, 160, 179, 161, 209, 140, 70, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "xkiqt", "7724 Maple Ln", "xkiqt@examplemail.com", "bnxbcn seucdkrf", "6217", "128-219-4491", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 79, 113, 34, 255, 134, 102, 151, 255, 11, 30, 140, 255, 165, 203, 249, 255, 164, 180, 102, 255, 3, 74, 192, 255, 117, 125, 115, 255, 175, 203, 230, 255, 0, 147, 51, 79, 255, 244, 179, 43, 255, 123, 237, 230, 255, 18, 148, 124, 255, 91, 55, 105, 255, 207, 175, 59, 255, 10, 187, 203, 255, 91, 120, 113, 255, 0, 141, 180, 44, 255, 111, 16, 192, 255, 105, 236, 244, 255, 41, 155, 254, 255, 50, 77, 17, 255, 195, 183, 189, 255, 219, 100, 15, 255, 182, 151, 176, 255, 0, 165, 140, 175, 255, 168, 119, 175, 255, 92, 180, 77, 255, 181, 219, 16, 255, 15, 92, 176, 255, 66, 151, 30, 255, 131, 76, 143, 255, 247, 45, 7, 255, 0, 191, 214, 6, 255, 144, 194, 72, 255, 218, 56, 143, 255, 182, 46, 98, 255, 77, 112, 192, 255, 177, 102, 114, 255, 37, 132, 235, 255, 200, 132, 55, 255, 0, 36, 49, 145, 255, 146, 116, 225, 255, 153, 213, 217, 255, 63, 76, 141, 255, 192, 170, 202, 255, 134, 57, 93, 255, 170, 135, 120, 255, 65, 210, 182, 255, 0, 167, 5, 200, 255, 127, 88, 239, 255, 18, 73, 76, 255, 211, 73, 87, 255, 244, 146, 165, 255, 224, 213, 102, 255, 141, 92, 87, 255, 248, 143, 137, 255, 0, 143, 208, 0, 255, 240, 145, 27, 255, 221, 193, 143, 255, 99, 199, 1, 255, 235, 138, 84, 255, 192, 226, 10, 255, 20, 193, 72, 255, 202, 34, 105, 255, 220, 118, 162, 13, 236, 139, 3, 71, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null },
                    { "ydmaz", "9578 Elm Blvd", "ydmaz@examplemail.com", "zonlkj wqvrmegk", "6417", "249-755-4921", new byte[] { 137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 8, 0, 0, 0, 8, 8, 6, 0, 0, 0, 196, 15, 190, 139, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0, 0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 14, 195, 0, 0, 14, 195, 1, 199, 111, 168, 100, 0, 0, 1, 19, 73, 68, 65, 84, 40, 83, 1, 8, 1, 247, 254, 0, 33, 66, 184, 255, 240, 232, 99, 255, 139, 65, 119, 255, 182, 46, 85, 255, 178, 165, 107, 255, 197, 143, 82, 255, 43, 135, 1, 255, 178, 234, 31, 255, 0, 185, 106, 88, 255, 38, 135, 31, 255, 241, 211, 31, 255, 216, 75, 63, 255, 176, 114, 144, 255, 43, 178, 127, 255, 28, 48, 239, 255, 231, 15, 201, 255, 0, 184, 148, 250, 255, 206, 88, 218, 255, 17, 136, 239, 255, 105, 233, 125, 255, 70, 221, 108, 255, 171, 105, 27, 255, 144, 64, 193, 255, 230, 142, 123, 255, 0, 83, 180, 223, 255, 98, 210, 223, 255, 95, 170, 88, 255, 77, 176, 121, 255, 124, 195, 3, 255, 149, 32, 131, 255, 120, 84, 91, 255, 122, 207, 111, 255, 0, 234, 116, 183, 255, 124, 210, 64, 255, 86, 67, 59, 255, 206, 108, 83, 255, 110, 237, 145, 255, 97, 116, 54, 255, 173, 41, 100, 255, 170, 10, 120, 255, 0, 12, 113, 69, 255, 14, 141, 181, 255, 11, 78, 147, 255, 192, 40, 206, 255, 212, 129, 80, 255, 209, 31, 88, 255, 224, 179, 235, 255, 18, 117, 85, 255, 0, 1, 32, 150, 255, 137, 25, 192, 255, 173, 67, 217, 255, 147, 249, 151, 255, 104, 234, 52, 255, 119, 208, 96, 255, 15, 254, 157, 255, 62, 157, 127, 255, 0, 238, 216, 228, 255, 193, 133, 41, 255, 5, 194, 88, 255, 34, 53, 172, 255, 30, 111, 228, 255, 196, 227, 160, 255, 253, 250, 13, 255, 246, 53, 37, 255, 133, 13, 160, 218, 164, 185, 202, 100, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130 }, null }
                });

            migrationBuilder.InsertData(
                table: "BankAccounts",
                columns: new[] { "AccountNumber", "AccountHolderName", "Balance", "UserUsername" },
                values: new object[,]
                {
                    { 1, "Joe Biden's Account", 2968.0, "userjoe" },
                    { 2, "Donald Trump's Account", 8336.0, "userdonald" },
                    { 3, "mdltsm plmxazyw's Account", 7256.5900000000001, "orijb" },
                    { 4, "nedrrp zogqljog's Account", 453.30000000000018, "vmbpp" },
                    { 5, "awmpwl nuqzxwux's Account", 5650.7099999999991, "sjjbo" },
                    { 6, "rbzpgf mixaqvmh's Account", 28841.580000000002, "btdbf" },
                    { 7, "utokyk uizhyrzh's Account", 104290.61, "afndp" },
                    { 8, "gkfatc pkvxixse's Account", 8112.1700000000001, "kmkno" },
                    { 9, "xuvpfj jzeuwscw's Account", 684.63999999999942, "nmhkn" },
                    { 10, "bnxbcn seucdkrf's Account", 16863.019999999997, "xkiqt" },
                    { 11, "qlrtut ecgsqcuf's Account", 41759.5, "ifybc" },
                    { 12, "lluyaz zbfqxhjy's Account", 27185.369999999999, "bpzdr" },
                    { 13, "zonlkj wqvrmegk's Account", 13692.290000000001, "ydmaz" },
                    { 14, "bqskun oirfqsck's Account", 10033.76, "mjldr" }
                });

            migrationBuilder.CreateIndex(
                name: "IX_BankAccounts_UserUsername",
                table: "BankAccounts",
                column: "UserUsername");

            migrationBuilder.CreateIndex(
                name: "IX_Transactions_BankAccountAccountNumber",
                table: "Transactions",
                column: "BankAccountAccountNumber");
        }

        /// <inheritdoc />
        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "Admins");

            migrationBuilder.DropTable(
                name: "Transactions");

            migrationBuilder.DropTable(
                name: "BankAccounts");

            migrationBuilder.DropTable(
                name: "Users");
        }
    }
}
